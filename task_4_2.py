# 4. Обработка списка чисел.
# Техническое задание
#
# Создать список, содержащий цены на товары (10 – 20 товаров), например: [57.8, 46.51, 97, …].
# Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде <r> руб <kk> коп
# (например «5 руб 04 коп»).
# Вывести на экран цены(как числа), отсортированные по возрастанию, новый список для этого не создавать (доказать,
# что объект списка после сортировки остался тот же).
# Создать новый список, содержащий те же цены, но отсортированные по убыванию. Показать, что это другой список,
# другой объект,
# Вывести цены пяти самых дорогих товаров.
# Список может содержать произвольное кол-во элементов.
# Часть цены в рублях оставляем без изменения. Нули добавляем только к копейкам.
# Считаем, что например 57.8 - 57 рублей и 80 копеек, а 8.04 - это 8 рублей и 4 копейки.
# Обратите внимание на требование создавать или не создавать новый список. Не путайте создание нового списка и присваивание
# его некоторой переменной.
# Формат вывода результата:
#
# Исходный список:
# [57.8, 46.40, 97, 12.3, 67.54, 8.07, 982.12]
# 57 руб 80 коп, 46 руб 40 коп, 97 руб 00 коп, 12 руб 30 коп, 67 руб 54 коп, 8 руб 07 коп, 982 руб 12 коп,
# Доказательство операции in place:
# id перед сортировкой хххххххх
# id после сортировки хххххххх
# [8.07, 12.3, 46.4, 57.8, 67.54, 97, 982.12]
# 5 самых дорогих товаров:
# 982.12
# 97
# 67.54
# 57.8
# 46.4
#
# Примечание:
#
# Регулярные выражения не используем. Учимся парсить самостоятельно.
# Алгоритм
#
# Подумать, как из цены получить рубли и копейки, как добавить нули, если, например, получилось 7 копеек или 0 копеек
# (должно быть 07 коп или 00 коп).
# Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?
# Здесь требуются различные сортировки - посмотрите внимательно (вебинар, методичка/документация) какие функции есть
# и что они возвращают как результат. В программе должно быть только два вызова функции сортировки. Помните! сортировка
# - очень дорогостоящая операция.

price = [57.8, 46.40, 97, 12.0, 67.54, 8.07, 982.017]
i = 0
str_price = ''
r = 'руб'
k = 'коп'

while i < len(price):
    remain_float = ''
    remain_int = ''
    if type(price[i]) == float:
        remain_float = str(str(round(price[i], 2))[str(price[i]).find('.') + 1:])
        remain_int = str(str(price[i])[str(price[i]).find('.') - str(price[i]).find('.'):str(price[i]).find('.')])
        if len(remain_float) < 2:
            remain_float += '0'
        str_price += f'{remain_int} {r} {remain_float} {k}, '
    else:
        str_price += f'{str(price[i])} {r} 00 {k}, '
    i += 1
print(str_price[:-2])
# сортировка и сравнение
print(f'       Исходный список - {price}, его id - {id(price)}')
price.sort()
print(f'Отсортированный список - {price}, его id - {id(price)}')
print(f'Реверснутый список     - {price[::-1]}, его id - {id(price[::-1])}')
count = 0
for x in price[::-1]:
    print(x)
    count += 1
    if count > 4:
        break
